// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoData_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtoData_2eproto;
class ProtoData;
class ProtoDataDefaultTypeInternal;
extern ProtoDataDefaultTypeInternal _ProtoData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoData* Arena::CreateMaybeMessage<::ProtoData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ProtoData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoData) */ {
 public:
  inline ProtoData() : ProtoData(nullptr) {};
  virtual ~ProtoData();

  ProtoData(const ProtoData& from);
  ProtoData(ProtoData&& from) noexcept
    : ProtoData() {
    *this = ::std::move(from);
  }

  inline ProtoData& operator=(const ProtoData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoData& operator=(ProtoData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoData* internal_default_instance() {
    return reinterpret_cast<const ProtoData*>(
               &_ProtoData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoData& a, ProtoData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoData* New() const final {
    return CreateMaybeMessage<ProtoData>(nullptr);
  }

  ProtoData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoData& from);
  void MergeFrom(const ProtoData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoData";
  }
  protected:
  explicit ProtoData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProtoData_2eproto);
    return ::descriptor_table_ProtoData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZvtecooqFieldNumber = 1,
    kYhavzzusFieldNumber = 2,
    kBdarcopvFieldNumber = 3,
    kZyxhbtadFieldNumber = 4,
    kBifsqzpyFieldNumber = 5,
    kWpeblhbaFieldNumber = 6,
    kEqohxbbjFieldNumber = 7,
    kRgmckfxbFieldNumber = 8,
  };
  // string zvtecooq = 1;
  void clear_zvtecooq();
  const std::string& zvtecooq() const;
  void set_zvtecooq(const std::string& value);
  void set_zvtecooq(std::string&& value);
  void set_zvtecooq(const char* value);
  void set_zvtecooq(const char* value, size_t size);
  std::string* mutable_zvtecooq();
  std::string* release_zvtecooq();
  void set_allocated_zvtecooq(std::string* zvtecooq);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_zvtecooq();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_zvtecooq(
      std::string* zvtecooq);
  private:
  const std::string& _internal_zvtecooq() const;
  void _internal_set_zvtecooq(const std::string& value);
  std::string* _internal_mutable_zvtecooq();
  public:

  // string yhavzzus = 2;
  void clear_yhavzzus();
  const std::string& yhavzzus() const;
  void set_yhavzzus(const std::string& value);
  void set_yhavzzus(std::string&& value);
  void set_yhavzzus(const char* value);
  void set_yhavzzus(const char* value, size_t size);
  std::string* mutable_yhavzzus();
  std::string* release_yhavzzus();
  void set_allocated_yhavzzus(std::string* yhavzzus);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_yhavzzus();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_yhavzzus(
      std::string* yhavzzus);
  private:
  const std::string& _internal_yhavzzus() const;
  void _internal_set_yhavzzus(const std::string& value);
  std::string* _internal_mutable_yhavzzus();
  public:

  // string bdarcopv = 3;
  void clear_bdarcopv();
  const std::string& bdarcopv() const;
  void set_bdarcopv(const std::string& value);
  void set_bdarcopv(std::string&& value);
  void set_bdarcopv(const char* value);
  void set_bdarcopv(const char* value, size_t size);
  std::string* mutable_bdarcopv();
  std::string* release_bdarcopv();
  void set_allocated_bdarcopv(std::string* bdarcopv);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bdarcopv();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bdarcopv(
      std::string* bdarcopv);
  private:
  const std::string& _internal_bdarcopv() const;
  void _internal_set_bdarcopv(const std::string& value);
  std::string* _internal_mutable_bdarcopv();
  public:

  // string zyxhbtad = 4;
  void clear_zyxhbtad();
  const std::string& zyxhbtad() const;
  void set_zyxhbtad(const std::string& value);
  void set_zyxhbtad(std::string&& value);
  void set_zyxhbtad(const char* value);
  void set_zyxhbtad(const char* value, size_t size);
  std::string* mutable_zyxhbtad();
  std::string* release_zyxhbtad();
  void set_allocated_zyxhbtad(std::string* zyxhbtad);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_zyxhbtad();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_zyxhbtad(
      std::string* zyxhbtad);
  private:
  const std::string& _internal_zyxhbtad() const;
  void _internal_set_zyxhbtad(const std::string& value);
  std::string* _internal_mutable_zyxhbtad();
  public:

  // string bifsqzpy = 5;
  void clear_bifsqzpy();
  const std::string& bifsqzpy() const;
  void set_bifsqzpy(const std::string& value);
  void set_bifsqzpy(std::string&& value);
  void set_bifsqzpy(const char* value);
  void set_bifsqzpy(const char* value, size_t size);
  std::string* mutable_bifsqzpy();
  std::string* release_bifsqzpy();
  void set_allocated_bifsqzpy(std::string* bifsqzpy);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bifsqzpy();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bifsqzpy(
      std::string* bifsqzpy);
  private:
  const std::string& _internal_bifsqzpy() const;
  void _internal_set_bifsqzpy(const std::string& value);
  std::string* _internal_mutable_bifsqzpy();
  public:

  // string wpeblhba = 6;
  void clear_wpeblhba();
  const std::string& wpeblhba() const;
  void set_wpeblhba(const std::string& value);
  void set_wpeblhba(std::string&& value);
  void set_wpeblhba(const char* value);
  void set_wpeblhba(const char* value, size_t size);
  std::string* mutable_wpeblhba();
  std::string* release_wpeblhba();
  void set_allocated_wpeblhba(std::string* wpeblhba);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_wpeblhba();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_wpeblhba(
      std::string* wpeblhba);
  private:
  const std::string& _internal_wpeblhba() const;
  void _internal_set_wpeblhba(const std::string& value);
  std::string* _internal_mutable_wpeblhba();
  public:

  // string eqohxbbj = 7;
  void clear_eqohxbbj();
  const std::string& eqohxbbj() const;
  void set_eqohxbbj(const std::string& value);
  void set_eqohxbbj(std::string&& value);
  void set_eqohxbbj(const char* value);
  void set_eqohxbbj(const char* value, size_t size);
  std::string* mutable_eqohxbbj();
  std::string* release_eqohxbbj();
  void set_allocated_eqohxbbj(std::string* eqohxbbj);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_eqohxbbj();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_eqohxbbj(
      std::string* eqohxbbj);
  private:
  const std::string& _internal_eqohxbbj() const;
  void _internal_set_eqohxbbj(const std::string& value);
  std::string* _internal_mutable_eqohxbbj();
  public:

  // string rgmckfxb = 8;
  void clear_rgmckfxb();
  const std::string& rgmckfxb() const;
  void set_rgmckfxb(const std::string& value);
  void set_rgmckfxb(std::string&& value);
  void set_rgmckfxb(const char* value);
  void set_rgmckfxb(const char* value, size_t size);
  std::string* mutable_rgmckfxb();
  std::string* release_rgmckfxb();
  void set_allocated_rgmckfxb(std::string* rgmckfxb);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_rgmckfxb();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_rgmckfxb(
      std::string* rgmckfxb);
  private:
  const std::string& _internal_rgmckfxb() const;
  void _internal_set_rgmckfxb(const std::string& value);
  std::string* _internal_mutable_rgmckfxb();
  public:

  // @@protoc_insertion_point(class_scope:ProtoData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zvtecooq_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yhavzzus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bdarcopv_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyxhbtad_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bifsqzpy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wpeblhba_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr eqohxbbj_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rgmckfxb_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtoData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoData

// string zvtecooq = 1;
inline void ProtoData::clear_zvtecooq() {
  zvtecooq_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::zvtecooq() const {
  // @@protoc_insertion_point(field_get:ProtoData.zvtecooq)
  return _internal_zvtecooq();
}
inline void ProtoData::set_zvtecooq(const std::string& value) {
  _internal_set_zvtecooq(value);
  // @@protoc_insertion_point(field_set:ProtoData.zvtecooq)
}
inline std::string* ProtoData::mutable_zvtecooq() {
  // @@protoc_insertion_point(field_mutable:ProtoData.zvtecooq)
  return _internal_mutable_zvtecooq();
}
inline const std::string& ProtoData::_internal_zvtecooq() const {
  return zvtecooq_.Get();
}
inline void ProtoData::_internal_set_zvtecooq(const std::string& value) {
  
  zvtecooq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_zvtecooq(std::string&& value) {
  
  zvtecooq_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.zvtecooq)
}
inline void ProtoData::set_zvtecooq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zvtecooq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.zvtecooq)
}
inline void ProtoData::set_zvtecooq(const char* value,
    size_t size) {
  
  zvtecooq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.zvtecooq)
}
inline std::string* ProtoData::_internal_mutable_zvtecooq() {
  
  return zvtecooq_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_zvtecooq() {
  // @@protoc_insertion_point(field_release:ProtoData.zvtecooq)
  return zvtecooq_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_zvtecooq(std::string* zvtecooq) {
  if (zvtecooq != nullptr) {
    
  } else {
    
  }
  zvtecooq_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zvtecooq,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.zvtecooq)
}
inline std::string* ProtoData::unsafe_arena_release_zvtecooq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.zvtecooq)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return zvtecooq_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_zvtecooq(
    std::string* zvtecooq) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (zvtecooq != nullptr) {
    
  } else {
    
  }
  zvtecooq_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      zvtecooq, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.zvtecooq)
}

// string yhavzzus = 2;
inline void ProtoData::clear_yhavzzus() {
  yhavzzus_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::yhavzzus() const {
  // @@protoc_insertion_point(field_get:ProtoData.yhavzzus)
  return _internal_yhavzzus();
}
inline void ProtoData::set_yhavzzus(const std::string& value) {
  _internal_set_yhavzzus(value);
  // @@protoc_insertion_point(field_set:ProtoData.yhavzzus)
}
inline std::string* ProtoData::mutable_yhavzzus() {
  // @@protoc_insertion_point(field_mutable:ProtoData.yhavzzus)
  return _internal_mutable_yhavzzus();
}
inline const std::string& ProtoData::_internal_yhavzzus() const {
  return yhavzzus_.Get();
}
inline void ProtoData::_internal_set_yhavzzus(const std::string& value) {
  
  yhavzzus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_yhavzzus(std::string&& value) {
  
  yhavzzus_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.yhavzzus)
}
inline void ProtoData::set_yhavzzus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yhavzzus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.yhavzzus)
}
inline void ProtoData::set_yhavzzus(const char* value,
    size_t size) {
  
  yhavzzus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.yhavzzus)
}
inline std::string* ProtoData::_internal_mutable_yhavzzus() {
  
  return yhavzzus_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_yhavzzus() {
  // @@protoc_insertion_point(field_release:ProtoData.yhavzzus)
  return yhavzzus_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_yhavzzus(std::string* yhavzzus) {
  if (yhavzzus != nullptr) {
    
  } else {
    
  }
  yhavzzus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yhavzzus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.yhavzzus)
}
inline std::string* ProtoData::unsafe_arena_release_yhavzzus() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.yhavzzus)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return yhavzzus_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_yhavzzus(
    std::string* yhavzzus) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (yhavzzus != nullptr) {
    
  } else {
    
  }
  yhavzzus_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      yhavzzus, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.yhavzzus)
}

// string bdarcopv = 3;
inline void ProtoData::clear_bdarcopv() {
  bdarcopv_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::bdarcopv() const {
  // @@protoc_insertion_point(field_get:ProtoData.bdarcopv)
  return _internal_bdarcopv();
}
inline void ProtoData::set_bdarcopv(const std::string& value) {
  _internal_set_bdarcopv(value);
  // @@protoc_insertion_point(field_set:ProtoData.bdarcopv)
}
inline std::string* ProtoData::mutable_bdarcopv() {
  // @@protoc_insertion_point(field_mutable:ProtoData.bdarcopv)
  return _internal_mutable_bdarcopv();
}
inline const std::string& ProtoData::_internal_bdarcopv() const {
  return bdarcopv_.Get();
}
inline void ProtoData::_internal_set_bdarcopv(const std::string& value) {
  
  bdarcopv_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_bdarcopv(std::string&& value) {
  
  bdarcopv_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.bdarcopv)
}
inline void ProtoData::set_bdarcopv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bdarcopv_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.bdarcopv)
}
inline void ProtoData::set_bdarcopv(const char* value,
    size_t size) {
  
  bdarcopv_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.bdarcopv)
}
inline std::string* ProtoData::_internal_mutable_bdarcopv() {
  
  return bdarcopv_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_bdarcopv() {
  // @@protoc_insertion_point(field_release:ProtoData.bdarcopv)
  return bdarcopv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_bdarcopv(std::string* bdarcopv) {
  if (bdarcopv != nullptr) {
    
  } else {
    
  }
  bdarcopv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bdarcopv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.bdarcopv)
}
inline std::string* ProtoData::unsafe_arena_release_bdarcopv() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.bdarcopv)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return bdarcopv_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_bdarcopv(
    std::string* bdarcopv) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bdarcopv != nullptr) {
    
  } else {
    
  }
  bdarcopv_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bdarcopv, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.bdarcopv)
}

// string zyxhbtad = 4;
inline void ProtoData::clear_zyxhbtad() {
  zyxhbtad_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::zyxhbtad() const {
  // @@protoc_insertion_point(field_get:ProtoData.zyxhbtad)
  return _internal_zyxhbtad();
}
inline void ProtoData::set_zyxhbtad(const std::string& value) {
  _internal_set_zyxhbtad(value);
  // @@protoc_insertion_point(field_set:ProtoData.zyxhbtad)
}
inline std::string* ProtoData::mutable_zyxhbtad() {
  // @@protoc_insertion_point(field_mutable:ProtoData.zyxhbtad)
  return _internal_mutable_zyxhbtad();
}
inline const std::string& ProtoData::_internal_zyxhbtad() const {
  return zyxhbtad_.Get();
}
inline void ProtoData::_internal_set_zyxhbtad(const std::string& value) {
  
  zyxhbtad_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_zyxhbtad(std::string&& value) {
  
  zyxhbtad_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.zyxhbtad)
}
inline void ProtoData::set_zyxhbtad(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyxhbtad_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.zyxhbtad)
}
inline void ProtoData::set_zyxhbtad(const char* value,
    size_t size) {
  
  zyxhbtad_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.zyxhbtad)
}
inline std::string* ProtoData::_internal_mutable_zyxhbtad() {
  
  return zyxhbtad_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_zyxhbtad() {
  // @@protoc_insertion_point(field_release:ProtoData.zyxhbtad)
  return zyxhbtad_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_zyxhbtad(std::string* zyxhbtad) {
  if (zyxhbtad != nullptr) {
    
  } else {
    
  }
  zyxhbtad_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyxhbtad,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.zyxhbtad)
}
inline std::string* ProtoData::unsafe_arena_release_zyxhbtad() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.zyxhbtad)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return zyxhbtad_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_zyxhbtad(
    std::string* zyxhbtad) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (zyxhbtad != nullptr) {
    
  } else {
    
  }
  zyxhbtad_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      zyxhbtad, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.zyxhbtad)
}

// string bifsqzpy = 5;
inline void ProtoData::clear_bifsqzpy() {
  bifsqzpy_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::bifsqzpy() const {
  // @@protoc_insertion_point(field_get:ProtoData.bifsqzpy)
  return _internal_bifsqzpy();
}
inline void ProtoData::set_bifsqzpy(const std::string& value) {
  _internal_set_bifsqzpy(value);
  // @@protoc_insertion_point(field_set:ProtoData.bifsqzpy)
}
inline std::string* ProtoData::mutable_bifsqzpy() {
  // @@protoc_insertion_point(field_mutable:ProtoData.bifsqzpy)
  return _internal_mutable_bifsqzpy();
}
inline const std::string& ProtoData::_internal_bifsqzpy() const {
  return bifsqzpy_.Get();
}
inline void ProtoData::_internal_set_bifsqzpy(const std::string& value) {
  
  bifsqzpy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_bifsqzpy(std::string&& value) {
  
  bifsqzpy_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.bifsqzpy)
}
inline void ProtoData::set_bifsqzpy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bifsqzpy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.bifsqzpy)
}
inline void ProtoData::set_bifsqzpy(const char* value,
    size_t size) {
  
  bifsqzpy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.bifsqzpy)
}
inline std::string* ProtoData::_internal_mutable_bifsqzpy() {
  
  return bifsqzpy_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_bifsqzpy() {
  // @@protoc_insertion_point(field_release:ProtoData.bifsqzpy)
  return bifsqzpy_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_bifsqzpy(std::string* bifsqzpy) {
  if (bifsqzpy != nullptr) {
    
  } else {
    
  }
  bifsqzpy_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bifsqzpy,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.bifsqzpy)
}
inline std::string* ProtoData::unsafe_arena_release_bifsqzpy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.bifsqzpy)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return bifsqzpy_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_bifsqzpy(
    std::string* bifsqzpy) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bifsqzpy != nullptr) {
    
  } else {
    
  }
  bifsqzpy_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bifsqzpy, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.bifsqzpy)
}

// string wpeblhba = 6;
inline void ProtoData::clear_wpeblhba() {
  wpeblhba_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::wpeblhba() const {
  // @@protoc_insertion_point(field_get:ProtoData.wpeblhba)
  return _internal_wpeblhba();
}
inline void ProtoData::set_wpeblhba(const std::string& value) {
  _internal_set_wpeblhba(value);
  // @@protoc_insertion_point(field_set:ProtoData.wpeblhba)
}
inline std::string* ProtoData::mutable_wpeblhba() {
  // @@protoc_insertion_point(field_mutable:ProtoData.wpeblhba)
  return _internal_mutable_wpeblhba();
}
inline const std::string& ProtoData::_internal_wpeblhba() const {
  return wpeblhba_.Get();
}
inline void ProtoData::_internal_set_wpeblhba(const std::string& value) {
  
  wpeblhba_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_wpeblhba(std::string&& value) {
  
  wpeblhba_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.wpeblhba)
}
inline void ProtoData::set_wpeblhba(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wpeblhba_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.wpeblhba)
}
inline void ProtoData::set_wpeblhba(const char* value,
    size_t size) {
  
  wpeblhba_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.wpeblhba)
}
inline std::string* ProtoData::_internal_mutable_wpeblhba() {
  
  return wpeblhba_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_wpeblhba() {
  // @@protoc_insertion_point(field_release:ProtoData.wpeblhba)
  return wpeblhba_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_wpeblhba(std::string* wpeblhba) {
  if (wpeblhba != nullptr) {
    
  } else {
    
  }
  wpeblhba_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wpeblhba,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.wpeblhba)
}
inline std::string* ProtoData::unsafe_arena_release_wpeblhba() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.wpeblhba)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return wpeblhba_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_wpeblhba(
    std::string* wpeblhba) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (wpeblhba != nullptr) {
    
  } else {
    
  }
  wpeblhba_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      wpeblhba, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.wpeblhba)
}

// string eqohxbbj = 7;
inline void ProtoData::clear_eqohxbbj() {
  eqohxbbj_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::eqohxbbj() const {
  // @@protoc_insertion_point(field_get:ProtoData.eqohxbbj)
  return _internal_eqohxbbj();
}
inline void ProtoData::set_eqohxbbj(const std::string& value) {
  _internal_set_eqohxbbj(value);
  // @@protoc_insertion_point(field_set:ProtoData.eqohxbbj)
}
inline std::string* ProtoData::mutable_eqohxbbj() {
  // @@protoc_insertion_point(field_mutable:ProtoData.eqohxbbj)
  return _internal_mutable_eqohxbbj();
}
inline const std::string& ProtoData::_internal_eqohxbbj() const {
  return eqohxbbj_.Get();
}
inline void ProtoData::_internal_set_eqohxbbj(const std::string& value) {
  
  eqohxbbj_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_eqohxbbj(std::string&& value) {
  
  eqohxbbj_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.eqohxbbj)
}
inline void ProtoData::set_eqohxbbj(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  eqohxbbj_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.eqohxbbj)
}
inline void ProtoData::set_eqohxbbj(const char* value,
    size_t size) {
  
  eqohxbbj_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.eqohxbbj)
}
inline std::string* ProtoData::_internal_mutable_eqohxbbj() {
  
  return eqohxbbj_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_eqohxbbj() {
  // @@protoc_insertion_point(field_release:ProtoData.eqohxbbj)
  return eqohxbbj_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_eqohxbbj(std::string* eqohxbbj) {
  if (eqohxbbj != nullptr) {
    
  } else {
    
  }
  eqohxbbj_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), eqohxbbj,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.eqohxbbj)
}
inline std::string* ProtoData::unsafe_arena_release_eqohxbbj() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.eqohxbbj)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return eqohxbbj_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_eqohxbbj(
    std::string* eqohxbbj) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (eqohxbbj != nullptr) {
    
  } else {
    
  }
  eqohxbbj_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      eqohxbbj, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.eqohxbbj)
}

// string rgmckfxb = 8;
inline void ProtoData::clear_rgmckfxb() {
  rgmckfxb_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::rgmckfxb() const {
  // @@protoc_insertion_point(field_get:ProtoData.rgmckfxb)
  return _internal_rgmckfxb();
}
inline void ProtoData::set_rgmckfxb(const std::string& value) {
  _internal_set_rgmckfxb(value);
  // @@protoc_insertion_point(field_set:ProtoData.rgmckfxb)
}
inline std::string* ProtoData::mutable_rgmckfxb() {
  // @@protoc_insertion_point(field_mutable:ProtoData.rgmckfxb)
  return _internal_mutable_rgmckfxb();
}
inline const std::string& ProtoData::_internal_rgmckfxb() const {
  return rgmckfxb_.Get();
}
inline void ProtoData::_internal_set_rgmckfxb(const std::string& value) {
  
  rgmckfxb_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_rgmckfxb(std::string&& value) {
  
  rgmckfxb_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.rgmckfxb)
}
inline void ProtoData::set_rgmckfxb(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rgmckfxb_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.rgmckfxb)
}
inline void ProtoData::set_rgmckfxb(const char* value,
    size_t size) {
  
  rgmckfxb_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.rgmckfxb)
}
inline std::string* ProtoData::_internal_mutable_rgmckfxb() {
  
  return rgmckfxb_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_rgmckfxb() {
  // @@protoc_insertion_point(field_release:ProtoData.rgmckfxb)
  return rgmckfxb_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_rgmckfxb(std::string* rgmckfxb) {
  if (rgmckfxb != nullptr) {
    
  } else {
    
  }
  rgmckfxb_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rgmckfxb,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.rgmckfxb)
}
inline std::string* ProtoData::unsafe_arena_release_rgmckfxb() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.rgmckfxb)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return rgmckfxb_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_rgmckfxb(
    std::string* rgmckfxb) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (rgmckfxb != nullptr) {
    
  } else {
    
  }
  rgmckfxb_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      rgmckfxb, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.rgmckfxb)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto
